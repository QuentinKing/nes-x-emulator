#include "WindowsMessageMap.h"

#include <sstream>
#include <iomanip>

#define MAP(msg) map[msg] = #msg;

WindowsMessageMap::WindowsMessageMap()
{
	MAP(WM_NULL);
	MAP(WM_CREATE);
	MAP(WM_DESTROY);
	MAP(WM_MOVE);
	MAP(WM_SIZE);
	MAP(WM_ACTIVATE);
	MAP(WM_SETFOCUS);
	MAP(WM_KILLFOCUS);
	MAP(WM_ENABLE);
	MAP(WM_SETREDRAW);
	MAP(WM_SETTEXT);
	MAP(WM_GETTEXT);
	MAP(WM_GETTEXTLENGTH);
	MAP(WM_PAINT);
	MAP(WM_CLOSE);
	MAP(WM_QUERYENDSESSION);
	MAP(WM_QUIT);
	MAP(WM_QUERYOPEN);
	MAP(WM_ERASEBKGND);
	MAP(WM_SYSCOLORCHANGE);
	MAP(WM_ENDSESSION);
	MAP(WM_SHOWWINDOW);
	MAP(WM_WININICHANGE);
	MAP(WM_DEVMODECHANGE);
	MAP(WM_ACTIVATEAPP);
	MAP(WM_FONTCHANGE);
	MAP(WM_TIMECHANGE);
	MAP(WM_CANCELMODE);
	MAP(WM_SETCURSOR);
	MAP(WM_MOUSEACTIVATE);
	MAP(WM_CHILDACTIVATE);
	MAP(WM_QUEUESYNC);
	MAP(WM_GETMINMAXINFO);
	MAP(WM_PAINTICON);
	MAP(WM_ICONERASEBKGND);
	MAP(WM_NEXTDLGCTL);
	MAP(WM_SPOOLERSTATUS);
	MAP(WM_DRAWITEM);
	MAP(WM_MEASUREITEM);
	MAP(WM_DELETEITEM);
	MAP(WM_VKEYTOITEM);
	MAP(WM_CHARTOITEM);
	MAP(WM_SETFONT);
	MAP(WM_GETFONT);
	MAP(WM_SETHOTKEY);
	MAP(WM_GETHOTKEY);
	MAP(WM_QUERYDRAGICON);
	MAP(WM_COMPAREITEM);
	MAP(WM_GETOBJECT);
	MAP(WM_COMPACTING);
	MAP(WM_COMMNOTIFY);
	MAP(WM_WINDOWPOSCHANGING);
	MAP(WM_WINDOWPOSCHANGED);
	MAP(WM_POWER);
	MAP(WM_COPYDATA);
	MAP(WM_CANCELJOURNAL);
	MAP(WM_NOTIFY);
	MAP(WM_INPUTLANGCHANGEREQUEST);
	MAP(WM_INPUTLANGCHANGE);
	MAP(WM_TCARD);
	MAP(WM_HELP);
	MAP(WM_USERCHANGED);
	MAP(WM_NOTIFYFORMAT);
	MAP(WM_CONTEXTMENU);
	MAP(WM_STYLECHANGING);
	MAP(WM_STYLECHANGED);
	MAP(WM_DISPLAYCHANGE);
	MAP(WM_GETICON);
	MAP(WM_SETICON);
	MAP(WM_NCCREATE);
	MAP(WM_NCDESTROY);
	MAP(WM_NCCALCSIZE);
	MAP(WM_NCHITTEST);
	MAP(WM_NCPAINT);
	MAP(WM_NCACTIVATE);
	MAP(WM_GETDLGCODE);
	MAP(WM_SYNCPAINT);
	MAP(WM_NCMOUSEMOVE);
	MAP(WM_NCLBUTTONDOWN);
	MAP(WM_NCLBUTTONUP);
	MAP(WM_NCLBUTTONDBLCLK);
	MAP(WM_NCRBUTTONDOWN);
	MAP(WM_NCRBUTTONUP);
	MAP(WM_NCRBUTTONDBLCLK);
	MAP(WM_NCMBUTTONDOWN);
	MAP(WM_NCMBUTTONUP);
	MAP(WM_NCMBUTTONDBLCLK);
	MAP(WM_NCXBUTTONDOWN);
	MAP(WM_NCXBUTTONUP);
	MAP(WM_NCXBUTTONDBLCLK);
	MAP(EM_GETSEL);
	MAP(EM_SETSEL);
	MAP(EM_GETRECT);
	MAP(EM_SETRECT);
	MAP(EM_SETRECTNP);
	MAP(EM_SCROLL);
	MAP(EM_LINESCROLL);
	MAP(EM_SCROLLCARET);
	MAP(EM_GETMODIFY);
	MAP(EM_SETMODIFY);
	MAP(EM_GETLINECOUNT);
	MAP(EM_LINEINDEX);
	MAP(EM_SETHANDLE);
	MAP(EM_GETHANDLE);
	MAP(EM_GETTHUMB);
	MAP(EM_LINELENGTH);
	MAP(EM_REPLACESEL);
	MAP(EM_GETLINE);
	MAP(EM_LIMITTEXT);
	MAP(EM_SETLIMITTEXT);
	MAP(EM_CANUNDO);
	MAP(EM_UNDO);
	MAP(EM_FMTLINES);
	MAP(EM_LINEFROMCHAR);
	MAP(EM_SETTABSTOPS);
	MAP(EM_SETPASSWORDCHAR);
	MAP(EM_EMPTYUNDOBUFFER);
	MAP(EM_GETFIRSTVISIBLELINE);
	MAP(EM_SETREADONLY);
	MAP(EM_SETWORDBREAKPROC);
	MAP(EM_GETWORDBREAKPROC);
	MAP(EM_GETPASSWORDCHAR);
	MAP(EM_SETMARGINS);
	MAP(EM_GETMARGINS);
	MAP(EM_GETLIMITTEXT);
	MAP(EM_POSFROMCHAR);
	MAP(EM_CHARFROMPOS);
	MAP(EM_SETIMESTATUS);
	MAP(EM_GETIMESTATUS);
	MAP(SBM_SETPOS);
	MAP(SBM_GETPOS);
	MAP(SBM_SETRANGE);
	MAP(SBM_GETRANGE);
	MAP(SBM_ENABLE_ARROWS);
	MAP(SBM_SETRANGEREDRAW);
	MAP(SBM_SETSCROLLINFO);
	MAP(SBM_GETSCROLLINFO);
	MAP(SBM_GETSCROLLBARINFO);
	MAP(BM_GETCHECK);
	MAP(BM_SETCHECK);
	MAP(BM_GETSTATE);
	MAP(BM_SETSTATE);
	MAP(BM_SETSTYLE);
	MAP(BM_CLICK);
	MAP(BM_GETIMAGE);
	MAP(BM_SETIMAGE);
	MAP(BM_SETDONTCLICK);
	MAP(WM_INPUT);
	MAP(WM_KEYDOWN);
	MAP(WM_KEYFIRST);
	MAP(WM_KEYUP);
	MAP(WM_CHAR);
	MAP(WM_DEADCHAR);
	MAP(WM_SYSKEYDOWN);
	MAP(WM_SYSKEYUP);
	MAP(WM_SYSCHAR);
	MAP(WM_SYSDEADCHAR);
	MAP(WM_UNICHAR / WM_KEYLAST);
	MAP(WM_IME_STARTCOMPOSITION);
	MAP(WM_IME_ENDCOMPOSITION);
	MAP(WM_IME_COMPOSITION);
	MAP(WM_IME_KEYLAST);
	MAP(WM_INITDIALOG);
	MAP(WM_COMMAND);
	MAP(WM_SYSCOMMAND);
	MAP(WM_TIMER);
	MAP(WM_HSCROLL);
	MAP(WM_VSCROLL);
	MAP(WM_INITMENU);
	MAP(WM_INITMENUPOPUP);
	MAP(WM_MENUSELECT);
	MAP(WM_MENUCHAR);
	MAP(WM_ENTERIDLE);
	MAP(WM_MENURBUTTONUP);
	MAP(WM_MENUDRAG);
	MAP(WM_MENUGETOBJECT);
	MAP(WM_UNINITMENUPOPUP);
	MAP(WM_MENUCOMMAND);
	MAP(WM_CHANGEUISTATE);
	MAP(WM_UPDATEUISTATE);
	MAP(WM_QUERYUISTATE);
	MAP(WM_CTLCOLORMSGBOX);
	MAP(WM_CTLCOLOREDIT);
	MAP(WM_CTLCOLORLISTBOX);
	MAP(WM_CTLCOLORBTN);
	MAP(WM_CTLCOLORDLG);
	MAP(WM_CTLCOLORSCROLLBAR);
	MAP(WM_CTLCOLORSTATIC);
	MAP(CB_GETEDITSEL);
	MAP(CB_LIMITTEXT);
	MAP(CB_SETEDITSEL);
	MAP(CB_ADDSTRING);
	MAP(CB_DELETESTRING);
	MAP(CB_DIR);
	MAP(CB_GETCOUNT);
	MAP(CB_GETCURSEL);
	MAP(CB_GETLBTEXT);
	MAP(CB_GETLBTEXTLEN);
	MAP(CB_INSERTSTRING);
	MAP(CB_RESETCONTENT);
	MAP(CB_FINDSTRING);
	MAP(CB_SELECTSTRING);
	MAP(CB_SETCURSEL);
	MAP(CB_SHOWDROPDOWN);
	MAP(CB_GETITEMDATA);
	MAP(CB_SETITEMDATA);
	MAP(CB_GETDROPPEDCONTROLRECT);
	MAP(CB_SETITEMHEIGHT);
	MAP(CB_GETITEMHEIGHT);
	MAP(CB_SETEXTENDEDUI);
	MAP(CB_GETEXTENDEDUI);
	MAP(CB_GETDROPPEDSTATE);
	MAP(CB_FINDSTRINGEXACT);
	MAP(CB_SETLOCALE);
	MAP(CB_GETLOCALE);
	MAP(CB_GETTOPINDEX);
	MAP(CB_SETTOPINDEX);
	MAP(CB_GETHORIZONTALEXTENT);
	MAP(CB_SETHORIZONTALEXTENT);
	MAP(CB_GETDROPPEDWIDTH);
	MAP(CB_SETDROPPEDWIDTH);
	MAP(CB_INITSTORAGE);
	MAP(CB_GETCOMBOBOXINFO);
	MAP(CB_MSGMAX);
	MAP(WM_MOUSEFIRST);
	MAP(WM_MOUSEMOVE);
	MAP(WM_LBUTTONDOWN);
	MAP(WM_LBUTTONUP);
	MAP(WM_LBUTTONDBLCLK);
	MAP(WM_RBUTTONDOWN);
	MAP(WM_RBUTTONUP);
	MAP(WM_RBUTTONDBLCLK);
	MAP(WM_MBUTTONDOWN);
	MAP(WM_MBUTTONUP);
	MAP(WM_MBUTTONDBLCLK);
	MAP(WM_MOUSELAST);
	MAP(WM_MOUSEWHEEL);
	MAP(WM_XBUTTONDOWN);
	MAP(WM_XBUTTONUP);
	MAP(WM_XBUTTONDBLCLK);
	MAP(WM_MOUSEHWHEEL);
	MAP(WM_PARENTNOTIFY);
	MAP(WM_ENTERMENULOOP);
	MAP(WM_EXITMENULOOP);
	MAP(WM_NEXTMENU);
	MAP(WM_SIZING);
	MAP(WM_CAPTURECHANGED);
	MAP(WM_MOVING);
	MAP(WM_POWERBROADCAST);
	MAP(WM_DEVICECHANGE);
	MAP(WM_MDICREATE);
	MAP(WM_MDIDESTROY);
	MAP(WM_MDIACTIVATE);
	MAP(WM_MDIRESTORE);
	MAP(WM_MDINEXT);
	MAP(WM_MDIMAXIMIZE);
	MAP(WM_MDITILE);
	MAP(WM_MDICASCADE);
	MAP(WM_MDIICONARRANGE);
	MAP(WM_MDIGETACTIVE);
	MAP(WM_MDISETMENU);
	MAP(WM_ENTERSIZEMOVE);
	MAP(WM_EXITSIZEMOVE);
	MAP(WM_DROPFILES);
	MAP(WM_MDIREFRESHMENU);
	MAP(WM_IME_SETCONTEXT);
	MAP(WM_IME_NOTIFY);
	MAP(WM_IME_CONTROL);
	MAP(WM_IME_COMPOSITIONFULL);
	MAP(WM_IME_SELECT);
	MAP(WM_IME_CHAR);
	MAP(WM_IME_REQUEST);
	MAP(WM_IME_KEYDOWN);
	MAP(WM_IME_KEYUP);
	MAP(WM_NCMOUSEHOVER);
	MAP(WM_MOUSEHOVER);
	MAP(WM_NCMOUSELEAVE);
	MAP(WM_MOUSELEAVE);
	MAP(WM_CUT);
	MAP(WM_COPY);
	MAP(WM_PASTE);
	MAP(WM_CLEAR);
	MAP(WM_UNDO);
	MAP(WM_RENDERFORMAT);
	MAP(WM_RENDERALLFORMATS);
	MAP(WM_DESTROYCLIPBOARD);
	MAP(WM_DRAWCLIPBOARD);
	MAP(WM_PAINTCLIPBOARD);
	MAP(WM_VSCROLLCLIPBOARD);
	MAP(WM_SIZECLIPBOARD);
	MAP(WM_ASKCBFORMATNAME);
	MAP(WM_CHANGECBCHAIN);
	MAP(WM_HSCROLLCLIPBOARD);
	MAP(WM_QUERYNEWPALETTE);
	MAP(WM_PALETTEISCHANGING);
	MAP(WM_PALETTECHANGED);
	MAP(WM_HOTKEY);
	MAP(WM_PRINT);
	MAP(WM_PRINTCLIENT);
	MAP(WM_APPCOMMAND);
	MAP(WM_HANDHELDFIRST);
	MAP(WM_HANDHELDLAST);
	MAP(WM_AFXFIRST);
	MAP(WM_AFXLAST);
	MAP(WM_PENWINFIRST);
	MAP(WM_PENWINLAST);
	MAP(DM_GETDEFID);
	MAP(NIN_SELECT);
	MAP(WM_PSD_PAGESETUPDLG);
	MAP(WM_USER);
	MAP(DM_SETDEFID);
	MAP(WM_CHOOSEFONT_GETLOGFONT);
	MAP(WM_PSD_FULLPAGERECT);
	MAP(DM_REPOSITION);
	MAP(WM_PSD_MINMARGINRECT);
	MAP(WM_PSD_MARGINRECT);
	MAP(WM_PSD_GREEKTEXTRECT);
	MAP(WM_PSD_ENVSTAMPRECT);
	MAP(WM_PSD_YAFULLPAGERECT);
	MAP(CDM_FIRST);
	MAP(CDM_GETSPEC);
	MAP(CDM_GETFILEPATH);
	MAP(PSM_SETCURSEL);
	MAP(WM_CHOOSEFONT_SETLOGFONT);
	MAP(CDM_GETFOLDERPATH);
	MAP(PSM_REMOVEPAGE);
	MAP(WM_CHOOSEFONT_SETFLAGS);
	MAP(CDM_GETFOLDERIDLIST);
	MAP(PSM_ADDPAGE);
	MAP(CDM_SETCONTROLTEXT);
	MAP(PSM_CHANGED);
	MAP(CDM_HIDECONTROL);
	MAP(PSM_RESTARTWINDOWS);
	MAP(CDM_SETDEFEXT);
	MAP(PSM_REBOOTSYSTEM);
	MAP(PSM_CANCELTOCLOSE);
	MAP(PSM_QUERYSIBLINGS);
	MAP(PSM_UNCHANGED);
	MAP(PSM_APPLY);
	MAP(PSM_SETTITLEA);
	MAP(PSM_SETWIZBUTTONS);
	MAP(PSM_PRESSBUTTON);
	MAP(PSM_SETCURSELID);
	MAP(PSM_SETFINISHTEXTA);
	MAP(PSM_GETTABCONTROL);
	MAP(PSM_ISDIALOGMESSAGE);
	MAP(PSM_GETCURRENTPAGEHWND);
	MAP(PSM_INSERTPAGE);
	MAP(PSM_SETTITLEW);
	MAP(PSM_SETFINISHTEXTW);
	MAP(PSM_SETHEADERTITLEA);
	MAP(PSM_SETHEADERTITLEW);
	MAP(PSM_SETHEADERSUBTITLEA);
	MAP(PSM_SETHEADERSUBTITLEW);
	MAP(PSM_HWNDTOINDEX);
	MAP(PSM_INDEXTOHWND);
	MAP(PSM_PAGETOINDEX);
	MAP(PSM_INDEXTOPAGE);
	MAP(PSM_IDTOINDEX);
	MAP(PSM_INDEXTOID);
	MAP(PSM_GETRESULT);
	MAP(PSM_RECALCPAGESIZES);
	MAP(WM_APP);
}

std::string WindowsMessageMap::operator()(DWORD msd, LPARAM lp, WPARAM wp) const
{
	const int padding = 25;
	const auto i = map.find(msd);

	std::ostringstream ss;

	if (i != map.end())
	{
		ss << std::left << std::setw(padding) << i->second << std::right;
		ss << "   LP: 0x" << std::hex << std::setfill('0') << std::setw(8) << lp;
		ss << "   WP: 0x" << std::hex << std::setfill('0') << std::setw(8) << wp;
		ss << std::endl;
	}
	else
	{
		ss << "Unknown message" << std::endl;
	}

	return ss.str();
}
